"""
Given any initial natural number, consider the sequence of 
numbers generated by repeatedly following the rule:

divide by two if the number is even or
multiply by 3 and add 1 if the number is odd.

The Collatz conjecture states that this sequence always 
terminates at 1. 
"""


# Takes input n and computes output named result

import simplegui

# global state

result = 1
max_result = 0
iteration = 0
max_iterations = 10

# helper functions

def init(start):
    """Initializes n."""
    global result
    result = start
    print "Input is", result

def get_next(current):
    """??? Part of mystery computation."""
    if current % 2 == 0:
        return current / 2
    else:
        return current * 3 + 1

# timer callback

def update():
    global iteration, result, max_result
    iteration += 1
    if result == 1:
        timer.stop()
        print "Output is", result
        print "Max result is", max_result
        print "Took", iteration, "iterations."
    else:
        result = get_next(result)
        if result > max_result:
            max_result = result
        print result

# register event handlers

timer = simplegui.create_timer(1, update)

# start program

init(217)
timer.start()